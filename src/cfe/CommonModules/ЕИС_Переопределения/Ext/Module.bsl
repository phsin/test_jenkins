// переопределение функций модуля
Функция НайтиФункцию( ИмяФункции ) Экспорт
	
	ПереопределяемыеФункции = Новый Структура;

	//ПереопределяемыеФункции.Вставить("СоздатьДокументыОтгрузки",				 Истина);
	//ПереопределяемыеФункции.Вставить("ПолучитьТзРеализаций",					 Истина);
	ПереопределяемыеФункции.Вставить("ПолучитьXMLАдресПоставщика",				 Истина);
	ПереопределяемыеФункции.Вставить("ПолучитьБанковскиеРеквизитыОрганизации",	 Истина);
	ПереопределяемыеФункции.Вставить("ПолучитьПредставлениеПолейДокументаВЗапрос",	 Истина);
	
	Результат = ПереопределяемыеФункции.Свойство( ИмяФункции );
	
	Возврат Результат;		
	
КонецФункции

Процедура СоздатьДокументыОтгрузки(МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходнаяНакладная.Ссылка КАК Ссылка,
	|	РасходнаяНакладная.Договор.еисКонтракт КАК Контракт,
	|	МИНИМУМ(еисЭтапы.НачДата) КАК НачДата
	|ПОМЕСТИТЬ втЭтапы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РасходнаяНакладная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.еисЭтапы КАК еисЭтапы
	|		ПО (РасходнаяНакладная.Договор.еисКонтракт = еисЭтапы.Владелец)
	|			И (РасходнаяНакладная.Дата МЕЖДУ еисЭтапы.НачДата И еисЭтапы.КонДата)
	|			И (НЕ еисЭтапы.ПометкаУдаления)
	|ГДЕ
	|	РасходнаяНакладная.Ссылка В(&СписокДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладная.Договор.еисКонтракт,
	|	РасходнаяНакладная.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка.Номер КАК НомерНаПечать,
	|	РеализацияТоваровУслуг.Ссылка.Дата КАК ДатаНаПечать,
	|	РеализацияТоваровУслуг.Ссылка КАК ДокументОснование,
	|	РеализацияТоваровУслуг.Ссылка.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Ссылка.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Ссылка.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.Ссылка.Договор КАК ДоговорКонтрагента,
	//++
	|	РеализацияТоваровУслуг.Ссылка.Грузополучатель_БИОН КАК Грузополучатель,
	|	РеализацияТоваровУслуг.Контракт КАК ЕИС_Контракт,
	|	РеализацияТоваровУслуг.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	еисЭтапы.Ссылка КАК ЕИС_ТекущийЭтап
	|ИЗ
	|	втЭтапы КАК РеализацияТоваровУслуг
	|		//|		ПО РеализацияТоваровУслугТовары.Номенклатура = еисКонтрактныеТовары.Номенклатура
	|		//|			И РеализацияТоваровУслугТовары.Цена = (ВЫРАЗИТЬ(еисКонтрактныеТовары.Цена КАК ЧИСЛО(15, 2)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.еисЭтапы КАК еисЭтапы
	|		ПО РеализацияТоваровУслуг.Контракт = еисЭтапы.Владелец
	|			И РеализацияТоваровУслуг.НачДата = еисЭтапы.НачДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Серия КАК Серия,
	|	ЕСТЬNULL(еисКонтрактныеТовары.Ссылка, ЗНАЧЕНИЕ(Справочник.еисКонтрактныеТовары.ПустаяСсылка)) КАК ЕИС_КонтрактныйТовар,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	|	ЕСТЬNULL(еисКонтрактныеТовары.Цена, 0) * ЕСТЬNULL(еисКонтрактныеТовары.КоличПотребЕдВПотребУпак, 1) КАК ЦенаПоКонтракту,
	|	СУММА(ЕСТЬNULL(еисКонтрактныеТовары.Цена, 0) * ЕСТЬNULL(еисКонтрактныеТовары.КоличПотребЕдВПотребУпак, 1) * РеализацияТоваровУслугТовары.Количество) КАК СуммаПоКонтракту,
	|	РеализацияТоваровУслугТовары.Ссылка КАК Документ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ РеализацияТоваровУслугТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(1) КАК Коэффициент
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.еисКонтрактныеТовары КАК еисКонтрактныеТовары
	|		ПО (РеализацияТоваровУслугТовары.Номенклатура.Родитель = еисКонтрактныеТовары.Номенклатура.Родитель)
	|			И (РеализацияТоваровУслугТовары.Номенклатура.еисКодТовара = ВЫБОР
	|				КОГДА еисКонтрактныеТовары.ОКПД2Код <> """"
	|					ТОГДА еисКонтрактныеТовары.ОКПД2Код
	|				ИНАЧЕ еисКонтрактныеТовары.КТРУКод
	|			КОНЕЦ)
	|			И (РеализацияТоваровУслугТовары.Ссылка.Договор.еисКонтракт = еисКонтрактныеТовары.Владелец)
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				т.Ссылка
	|			ИЗ
	|				втЭтапы КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Серия,
	|	РеализацияТоваровУслугТовары.Цена,
	|	РеализацияТоваровУслугТовары.СтавкаНДС,
	|	ЕСТЬNULL(еисКонтрактныеТовары.Цена, 0)* ЕСТЬNULL(еисКонтрактныеТовары.КоличПотребЕдВПотребУпак, 0),
	|	ЕСТЬNULL(еисКонтрактныеТовары.Ссылка, ЗНАЧЕНИЕ(Справочник.еисКонтрактныеТовары.ПустаяСсылка)),
	|	РеализацияТоваровУслугТовары.Ссылка,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ РеализацияТоваровУслугТовары.Упаковка
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугШтрихкодыУпаковок.Ссылка КАК Документ,
	|	РеализацияТоваровУслугШтрихкодыУпаковок.ШтрихкодУпаковки.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугШтрихкодыУпаковок.ШтрихкодУпаковки.ЗначениеШтрихкода КАК КодМаркировки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК РеализацияТоваровУслугШтрихкодыУпаковок
	|ГДЕ
	|	РеализацияТоваровУслугШтрихкодыУпаковок.Ссылка В
	|			(ВЫБРАТЬ
	|				т.Ссылка
	|			ИЗ
	|				втЭтапы КАК т)";
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	//Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПоШапке		 = РезультатЗапроса[1].Выбрать();
	тзТовары			 = РезультатЗапроса[2].Выгрузить();
	тзШтрихкодыУпаковок	 = РезультатЗапроса[3].Выгрузить();
	
	Пока ВыборкаПоШапке.Следующий() Цикл
		
		ДокОтгрузки = Документы.ЕИС_ТранспортныйКонтейнер.СоздатьДокумент();
		ДокОтгрузки.Дата = ТекущаяДатаСеанса();
		ЗаполнитьЗначенияСвойств(ДокОтгрузки, ВыборкаПоШапке);
		ДокОтгрузки.НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокОтгрузки.НомерНаПечать, Истина, Истина);
		
		СтруктураПоиска = Новый Структура("Документ", ВыборкаПоШапке.ДокументОснование);
		ТоварыПоДокументу = тзТовары.Скопировать(СтруктураПоиска);
		Для Каждого Стр Из ТоварыПоДокументу Цикл
			
			//СтрОтгрузки = ДокОтгрузки.Товары.Добавить();
			//СтрОтгрузки.Номенклатура = Стр.Номенклатура;
			
			СтруктураОтбора = Новый Структура("Номенклатура, Цена", Стр.Номенклатура, Стр.Цена);
			НайденныеСтроки = ТоварыПоДокументу.НайтиСтроки(СтруктураОтбора);
			ДобавленаСтрока = Ложь;
			
			Если НайденныеСтроки.Количество() = 1 Тогда
				СтрОтгрузки = ДокОтгрузки.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрОтгрузки, Стр);
				ДобавленаСтрока = Истина;
			Иначе
				
				Если ДокОтгрузки.Товары.Количество() Тогда
					ПоследняяСтрока	= ДокОтгрузки.Товары[ДокОтгрузки.Товары.Количество()-1];
					Если ПоследняяСтрока.Номенклатура = Стр.Номенклатура 
							И ПоследняяСтрока.Цена = Стр.Цена Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Для Каждого СтрПоНоменклатуре Из НайденныеСтроки Цикл
					Если Окр(СтрПоНоменклатуре.ЦенаПоКонтракту, 2) = СтрПоНоменклатуре.Цена 
						    // ТЕСТ - Допустима разница при округлении копейка +-
							ИЛИ (Окр(СтрПоНоменклатуре.ЦенаПоКонтракту, 2) - СтрПоНоменклатуре.Цена = 0.01
									ИЛИ Окр(СтрПоНоменклатуре.ЦенаПоКонтракту, 2) - СтрПоНоменклатуре.Цена = -0.01)
							ИЛИ Не ЗначениеЗаполнено(СтрПоНоменклатуре.ЕИС_КонтрактныйТовар) Тогда
							
						СтрОтгрузки = ДокОтгрузки.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(СтрОтгрузки, СтрПоНоменклатуре);
						ДобавленаСтрока = Истина;
						
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			Если Не ДобавленаСтрока Тогда
				СтрОтгрузки = ДокОтгрузки.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрОтгрузки, СтрПоНоменклатуре,, "ЕИС_КонтрактныйТовар, ЦенаПоКонтракту");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("[%1]: Не удалось определить строку по контракту для номенклатуры %2, с ценой %3"
					, ДокОтгрузки.ДокументОснование, СтрОтгрузки.Номенклатура, СтрОтгрузки.Цена), ДокОтгрузки.ДокументОснование);
			КонецЕсли;
						
		КонецЦикла;
		
		ДокОтгрузки.ШтрихкодыУпаковок.Загрузить(тзШтрихкодыУпаковок.Скопировать(СтруктураПоиска));
		
		ГМ_ЕИС.ЗаполнитьПрикрепленныеФайлы(ДокОтгрузки);
		
		ДокОтгрузки.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьТзРеализаций(ПараметрыФункции) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И РеализацияТоваровУслугТовары.Ссылка.Организация = &Организация
	|	И НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления
	|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Грузополучатель_БИОН КАК Грузополучатель,
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	втТовары.Количество,
	|	РеализацияТоваровУслуг.Договор.еисКонтракт КАК Контракт,
	|	РеализацияТоваровУслуг.Контрагент,
	|	ЕИС_ТранспортныйКонтейнер.Ссылка КАК ДокументОтгрузки,
	|	еисСтатусыЗапросовСрезПоследних.СтатусЗапроса,
	|	еисСтатусыДокументовСрезПоследних.СтатусДокумента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТовары КАК втТовары
	|		ПО (втТовары.Ссылка = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЕИС_ТранспортныйКонтейнер КАК ЕИС_ТранспортныйКонтейнер
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.еисСтатусыЗапросов.СрезПоследних(&ТекущаяДата, ) КАК еисСтатусыЗапросовСрезПоследних
	|			ПО ЕИС_ТранспортныйКонтейнер.Ссылка = еисСтатусыЗапросовСрезПоследних.Документ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.еисСтатусыДокументов.СрезПоследних(&ТекущаяДата, ) КАК еисСтатусыДокументовСрезПоследних
	|			ПО ЕИС_ТранспортныйКонтейнер.Ссылка = еисСтатусыДокументовСрезПоследних.Документ
	|		ПО РеализацияТоваровУслуг.Ссылка = ЕИС_ТранспортныйКонтейнер.ДокументОснование
	|			И (НЕ ЕИС_ТранспортныйКонтейнер.ПометкаУдаления)
	|ГДЕ
	|	РеализацияТоваровУслуг.Организация = &Организация
	|	И РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И РеализацияТоваровУслуг.Проведен
	|	И НЕ РеализацияТоваровУслуг.ПометкаУдаления
	|	И НЕ РеализацияТоваровУслуг.Договор.еисКонтракт = ЗНАЧЕНИЕ(Справочник.еисКонтракты.ПустаяСсылка)
	|	И &ОтборПоКОнтрагенту
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Контрагент";
	Запрос.УстановитьПараметр("Организация", ПараметрыФункции["Организация"]); 
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыФункции["ДатаНачала"]); 
	Запрос.УстановитьПараметр("ОкончаниеПериода", ПараметрыФункции["ДатаОкончания"]);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Если ЗначениеЗаполнено(ПараметрыФункции["ВыбКонтрагент"]) Тогда
		ПодстрокаЗамены = "И РеализацияТоваровУслуг.Контрагент В(&Контрагент)";
		Запрос.УстановитьПараметр("Контрагент", ПараметрыФункции["ВыбКонтрагент"]);
	Иначе
		ПодстрокаЗамены = "";
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ОтборПоКОнтрагенту", ПодстрокаЗамены);
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция ПолучитьXMLАдресПоставщика(АдресПоКЛАДР, ПараметрыОрганизации) Экспорт
	
	АдресПоставщикаXML = ГМ_ЕИС.АдресXML( АдресПоКЛАДР, ПараметрыОрганизации );
	
	Возврат АдресПоставщикаXML;
	
КонецФункции

Процедура ПолучитьБанковскиеРеквизитыОрганизации(Докум, СведенияОбОрганизации, ПараметрыОрганизации) Экспорт

	БанкСчет = ПараметрыОрганизации["БанковскийСчетОрганизации"];
	Если НЕ ЗначениеЗаполнено(БанкСчет) Тогда 
		ВызватьИсключение "В параметрах ЕИС не выбран банковский счет организации";
	КонецЕсли;
	
	СведенияОбОрганизации.НомерСчета = БанкСчет.НомерСчета;
	СведенияОбОрганизации.Банк = БанкСчет.Банк;
	СведенияОбОрганизации.БИК = СокрЛП(БанкСчет.БИКБанка);
	СведенияОбОрганизации.КоррСчет = БанкСчет.КоррСчетБанка;
	
КонецПроцедуры


Функция ПолучитьСведенияОбОрганизации(Организация) Экспорт

	// УТ 10.3
	Возврат  УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДатаСеанса());
	
КонецФункции

Функция ПолучитьПредставлениеПолейДокументаВЗапрос() Экспорт
	
	РеквизитГрузополучатель = Константы.кб99_ЕИС_НазваниеРеквизитаГрузополучатель.Получить();
	
	ТекстЗапросаШтрихкодыУпаковок = "ВЫБРАТЬ
	|	РеализацияТоваровУслугШтрихкодыУпаковок.Ссылка КАК Документ,
	|	РеализацияТоваровУслугШтрихкодыУпаковок.ШтрихкодУпаковки.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугШтрихкодыУпаковок.ШтрихкодУпаковки.ЗначениеШтрихкода КАК КодМаркировки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК РеализацияТоваровУслугШтрихкодыУпаковок
	|ГДЕ
	|	РеализацияТоваровУслугШтрихкодыУпаковок.Ссылка В
	|			(ВЫБРАТЬ
	|				т.Ссылка
	|			ИЗ
	|				втЭтапы КАК т)";
	
	ТекстПоляЕдиницаИзмерения = "ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ РеализацияТоваровУслугТовары.Упаковка
	|	КОНЕЦ";
	
	//ТекстПоляКоэффициент = "ВЫБОР
	//|		КОГДА РеализацияТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	//|			ТОГДА ВЫБОР
	//|					КОГДА РеализацияТоваровУслугТовары.Номенклатура.ВесИспользовать
	//|					ТОГДА РеализацияТоваровУслугТовары.Номенклатура.ВесЧислитель / РеализацияТоваровУслугТовары.Номенклатура.ВесЗнаменатель
	//|					ИНАЧЕ 1
	//|				КОНЕЦ
	//|			ИНАЧЕ 1
	//|		КОНЕЦ";
    ТекстПоляКоэффициент = "1";
	
	Результат = Новый Структура;
	Результат.Вставить("ТекстПоляДоговор", "Договор");
	Результат.Вставить("ТекстПоляКонтракт", "Договор.еисКонтракт");
	Результат.Вставить("ТекстПоляГрузополучатель", ?(ЗначениеЗаполнено(РеквизитГрузополучатель), 
		РеквизитГрузополучатель, "Грузополучатель"));
	Результат.Вставить("ТекстПоляТаблицаТовары", "РеализацияТоваровУслуг.Товары");
	Результат.Вставить("ТекстПоляСерия", "Серия");
	Результат.Вставить("ТекстПоляЦенаВключаетНДС", "ЦенаВключаетНДС");
	Результат.Вставить("ТекстПоляЕдиницаИзмерения", ТекстПоляЕдиницаИзмерения);
	Результат.Вставить("ТекстЗапросаШтрихкодыУпаковок", ТекстЗапросаШтрихкодыУпаковок);
	Результат.Вставить("ТекстПоляКоэффициент", ТекстПоляКоэффициент);
	Результат.Вставить("ТекстПоляИсточник", "Документ.РеализацияТоваровУслуг");
	Результат.Вставить("ТекстПоляЦена", "РеализацияТоваровУслугТовары.Цена");
	Результат.Вставить("ТекстПоляКоличество", "КоличествоУпаковок");
	Результат.Вставить("ТекстЗапросаУслуги", ";");
	
	Возврат Результат;
	
КонецФункции

