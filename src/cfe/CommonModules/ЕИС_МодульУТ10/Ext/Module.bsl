Функция НайтиСтрану(КодСтраны) Экспорт

	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("НайтиСтрану");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.НайтиСтрану(КодСтраны);
	КонецЕсли;

	СтранаПроисхождения = Справочники.КлассификаторСтранМира.НайтиПоКоду(КодСтраны);

	Если Не ЗначениеЗаполнено(СтранаПроисхождения) Тогда

		ГМ_ЕИС.СообщитьИнфо("Не найдена страна с кодом: " + КодСтраны);	

	КонецЕсли;

	Возврат СтранаПроисхождения;

КонецФункции

Функция НайтиЕдиницуИзмерения(КодЕдиницы) Экспорт

	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("НайтиЕдиницуИзмерения");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.НайтиЕдиницуИзмерения(КодЕдиницы);
	КонецЕсли;

	ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду(КодЕдиницы);

	Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда

		ГМ_ЕИС.СообщитьИнфо("Не найдена единица измерения с кодом: " + КодЕдиницы);	

	КонецЕсли;

	Возврат ЕдиницаИзмерения;

КонецФункции

Функция ПолучитьСтавкуНДС(СтавкаНДС) Экспорт

	Если Не ЗначениеЗаполнено(СтавкаНДС) 
			Или СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		Возврат 0;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
		Возврат 10;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		Возврат 20;
	КонецЕсли;	
		
КонецФункции

Функция КодИНаименованиеЕдиницыИзмеренияКВыгрузке(СтрокаТЧ) Экспорт
	
	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("КодИНаименованиеЕдиницыИзмеренияКВыгрузке");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.КодИНаименованиеЕдиницыИзмеренияКВыгрузке(СтрокаТЧ);
	КонецЕсли;
	
	ЕдиницаИзмерения = СтрокаТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору;
	
	Возврат Новый Структура("Код, Наименование", ЕдиницаИзмерения.Код, ЕдиницаИзмерения.Наименование);
		
КонецФункции

Функция ПолучитьПредставлениеПолейДокументаВЗапрос() Экспорт
	
	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("ПолучитьПредставлениеПолейДокументаВЗапрос");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.ПолучитьПредставлениеПолейДокументаВЗапрос();
	КонецЕсли;
	
	РеквизитГрузополучатель = Константы.кб99_ЕИС_НазваниеРеквизитаГрузополучатель.Получить();
	
	ТекстЗапросаШтрихкодыУпаковок = "";
	
	Результат = Новый Структура;
	Результат.Вставить("ТекстПоляДоговор", "ДоговорКонтрагента");
	Результат.Вставить("ТекстПоляКонтракт", "ДоговорКонтрагента.еисКонтракт");
	Результат.Вставить("ТекстПоляГрузополучатель", ?(ЗначениеЗаполнено(РеквизитГрузополучатель), 
		РеквизитГрузополучатель, "Грузополучатель"));
	Результат.Вставить("ТекстПоляТаблицаТовары", "РеализацияТоваровУслуг.Товары");
	Результат.Вставить("ТекстПоляСерия", "СерияНоменклатуры");
	Результат.Вставить("ТекстПоляЦенаВключаетНДС", "СуммаВключаетНДС");
	Результат.Вставить("ТекстПоляЕдиницаИзмерения", "РеализацияТоваровУслугТовары.ЕдиницаИзмерения");
	Результат.Вставить("ТекстЗапросаШтрихкодыУпаковок", ТекстЗапросаШтрихкодыУпаковок);
	Результат.Вставить("ТекстПоляКоэффициент", "1");
	Результат.Вставить("ТекстПоляИсточник", "Документ.РеализацияТоваровУслуг");
	Результат.Вставить("ТекстПоляЦена", "РеализацияТоваровУслугТовары.Цена");
	Результат.Вставить("ТекстПоляКоличество", "Количество");
	Результат.Вставить("ТекстЗапросаУслуги", ";");
	
	Возврат Результат;
		
КонецФункции

Процедура ПолучитьБанковскиеРеквизитыОрганизации(Докум, СведенияОбОрганизации, ПараметрыОрганизации) Экспорт
	
	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("ПолучитьБанковскиеРеквизитыОрганизации");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		ПереопределенныйМодуль.ПолучитьБанковскиеРеквизитыОрганизации(Докум, СведенияОбОрганизации, ПараметрыОрганизации);
		Возврат;
	КонецЕсли;
	
	БанкСчет = ПараметрыОрганизации["БанковскийСчетОрганизации"];
	Если НЕ ЗначениеЗаполнено(БанкСчет) Тогда 
		ВызватьИсключение "В параметрах ЕИС не выбран банковский счет организации";
	КонецЕсли;
	
	СведенияОбОрганизации.НомерСчета = БанкСчет.НомерСчета;
	СведенияОбОрганизации.Банк = БанкСчет.Банк;
	СведенияОбОрганизации.БИК = СокрЛП(СведенияОбОрганизации.Банк.Код);
	СведенияОбОрганизации.КоррСчет = СведенияОбОрганизации.Банк.КоррСчет;
  
КонецПроцедуры

Процедура ЗаполнитьНомерДатуНаПечать(ДокОтгрузки) Экспорт
	
	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("ЗаполнитьНомерДатуНаПечать");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		ПереопределенныйМодуль.ЗаполнитьНомерДатуНаПечать(ДокОтгрузки);
		Возврат;
	КонецЕсли;
	
	ДокОснование = ДокОтгрузки.ДокументОснование;
	
	СчетФактура = НайтиПодчиненныйСчетФактура(ДокОснование);
	
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		ДокОтгрузки.НомерНаПечать = ПолучитьНомерНаПечать(СчетФактура);
		ДокОтгрузки.ДатаНаПечать = СчетФактура.Дата;
		ДокОтгрузки.СтатусУПД = 1;
	Иначе
		ДокОтгрузки.НомерНаПечать = ПолучитьНомерНаПечать(ДокОснование);
		ДокОтгрузки.ДатаНаПечать = ДокОснование.Дата;
		ДокОтгрузки.СтатусУПД = 2;	
	КонецЕсли;

КонецПроцедуры

Функция НайтиПодчиненныйСчетФактура(ДокОснование) Экспорт

	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("НайтиПодчиненныйСчетФактура");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.НайтиПодчиненныйСчетФактура(ДокОснование);
	КонецЕсли;
	
	Возврат УчетНДС.НайтиПодчиненныйДокумент(ДокОснование, "СчетФактураВыданный");
	
КонецФункции

Процедура ЗаполнитьКМОСУ(ДокОтгрузки) Экспорт
	
	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("ЗаполнитьКМОСУ");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		ПереопределенныйМодуль.ЗаполнитьКМОСУ(ДокОтгрузки);
		Возврат;
	КонецЕсли;

	//ВидыПродукцииУчета = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции();
	//ДокОснование = ДокОтгрузки.ДокументОснование;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РеализацияТоваровУслугТовары.Номенклатура,
	//	|	РеализацияТоваровУслугТовары.Номенклатура.GTIN,
	//	|	СУММА(РеализацияТоваровУслугТовары.Количество * РеализацияТоваровУслугТовары.Коэффициент) КАК КоличествоКМ
	//	|ИЗ
	//	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//	|ГДЕ
	//	|	РеализацияТоваровУслугТовары.Ссылка = &ДокОснование
	//	|	И РеализацияТоваровУслугТовары.Номенклатура.ВидПродукцииИС В(&УчитываемыеВидыПродукцииИС)
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	РеализацияТоваровУслугТовары.Номенклатура,
	//	|	РеализацияТоваровУслугТовары.Номенклатура.GTIN";
	//
	//Запрос.УстановитьПараметр("ДокОснование", ДокОснование);
	//Запрос.УстановитьПараметр("УчитываемыеВидыПродукцииИС", ВидыПродукцииУчета);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//ДокОтгрузки.ШтрихкодыУпаковок.Очистить();
	//
	//Пока Выборка.Следующий() Цикл
	//	Если ЗначениеЗаполнено(Выборка.GTIN) Тогда
	//		нСтр = ДокОтгрузки.ШтрихкодыУпаковок.Добавить();
	//		нСтр.Номенклатура = Выборка.Номенклатура;
	//		нСтр.КодМаркировки = "(02)" + СокрЛП(Выборка.GTIN) + "(37)" + 
	//			Формат(Выборка.КоличествоКМ, "ЧДЦ=0; ЧГ=");
	//	Иначе
	//		ГМ_ЕИС.СообщитьИнфо("Для номенклатуры: " + Выборка.Номенклатура + 
	//			" настроена маркировка, но не указан GTIN");
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьНомерНаПечать(Докум) Экспорт

	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("ПолучитьНомерНаПечать");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.ПолучитьНомерНаПечать(Докум);
	КонецЕсли;
	
	Возврат СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Докум));
	
КонецФункции

Функция ПолучитьСведенияОбОрганизации(Организация) Экспорт

	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("ПолучитьСведенияОбОрганизации");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.ПолучитьСведенияОбОрганизации(Организация);
	КонецЕсли;
	
	Возврат  УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДатаСеанса());	
	
КонецФункции

Функция ПолучитьИмяСправочникаБанковскиеСчета() Экспорт

	Возврат "БанковскиеСчета";
	
КонецФункции

Функция ОписаниеОрганизации(СписокСведений, Список = "") Экспорт

	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("ОписаниеОрганизации");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.ОписаниеОрганизации(СписокСведений, Список);
	КонецЕсли;

	Возврат ФормированиеПечатныхФорм.ОписаниеОрганизации(СписокСведений, Список);
	
КонецФункции

Функция НайтиДоговорКонтрагента(Контрагент, Номер) Экспорт

	// Проверка переопределения функции в Общем модуле ЕИС_Переопределения
	ПереопределенныйМодуль = ГМ_ЕИС.ФункцияПереопределена("НайтиДоговорКонтрагента");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.НайтиДоговорКонтрагента(Контрагент, Номер);
	КонецЕсли;
	
	Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.Ссылка КАК Договор
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Контрагент
		|	И ДоговорыКонтрагентов.Номер ПОДОБНО &Номер";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Номер", Номер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Договор = ВыборкаДетальныеЗаписи.Договор;
	КонецЕсли;
	
	Возврат Договор;
	
КонецФункции