
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//ЭлементОтбора = ТоварыПоКонтракту.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
	//ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ; 
	//ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонтрактВЕИС(Команда)
	
	ЗапуститьПриложение("https://zakupki.gov.ru/epz/contract/contractCard/common-info.html?reestrNumber="+Объект.РеестровыйНомерКонтракта);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьXML(Команда)
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(Объект.еисФайлОтвет);
	ЗапуститьПриложение(Объект.еисФайлОтвет);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформацию(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = ГМ_ЕИС.ПолучитьОрганизациюПоУмолчанию();	
	КонецЕсли;
	ПараметрыОрганизации = ГМ_ЕИС.ПолучитьСтруктуруПараметров(Объект.Организация);
	Компонента = ЕИС_Клиент.ИнициализацияКомпоненты(ПараметрыОрганизации);

	ЕИС_Клиент.ОбновитьКонтрактИзЕИС(Объект.Ссылка, Компонента, ПараметрыОрганизации);
	ЭтотОбъект.Прочитать();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПоКонтрактуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//Если Поле.Имя = "ТоварыПоКонтрактуНоменклатура" Тогда
	//	
	//	СтандартнаяОбработка = Ложь;
	//	ТоварПоКонтракту = Элемент.ТекущиеДанные.Ссылка;
	//	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборНоменклатурыЗавершение", ЭтотОбъект, ТоварПоКонтракту);
	//	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора"
	//		, Новый Структура("РежимВыбора, МножественныйВыбор, ЗакрыватьПриВыборе", Истина, Ложь, Истина)
	//		, ЭтотОбъект
	//		,
	//		,
	//		,
	//		, ОписаниеОповещения
	//		, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//		
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборНоменклатурыЗавершение(ВыбНоменклатура, ТоварПоКонтракту) Экспорт
	
	Если Не ВыбНоменклатура = Неопределено Тогда
		
		ЗаписатьСоответствиеТоваров(ВыбНоменклатура, ТоварПоКонтракту);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствиеТоваров(ВыбНоменклатура, ТоварПоКонтракту) 
	
	ГМ_ЕИС.ЗаписатьСоответствиеТоваров(ВыбНоменклатура, ТоварПоКонтракту);

	Если Не ЗначениеЗаполнено(ВыбНоменклатура) Тогда
		СтрокиПоТовару = тзТоварыПоКонтракту.НайтиСтроки(Новый Структура("КонтрактныйТовар", ТоварПоКонтракту));
		Для Каждого Стр Из СтрокиПоТовару Цикл
			Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
				ГМ_ЕИС.ЗаписатьСоответствиеТоваров(Стр.Номенклатура, ТоварПоКонтракту);	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	 ОбновитьТчТоварыПоКотракту();
	 
КонецПроцедуры

&НаКлиенте
Процедура тзТоварыПоКонтрактуНоменклатураПриИзменении(Элемент)
	
	ТекСтрока = Элементы.тзТоварыПоКонтракту.ТекущиеДанные;
	ЗаписатьСоответствиеТоваров(ТекСтрока.Номенклатура, ТекСтрока.КонтрактныйТовар);
	ОбновитьТчТоварыПоКотракту();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТчТоварыПоКотракту()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		тзТоварыПоКонтракту.Очистить();

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	еисКонтрактныеТовары.Ссылка КАК КонтрактныйТовар,
			|	кб99_СоответствияТоваровЕИС.Номенклатура КАК Номенклатура
			|ИЗ
			|	Справочник.еисКонтрактныеТовары КАК еисКонтрактныеТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.кб99_СоответствияТоваровЕИС КАК кб99_СоответствияТоваровЕИС
			|		ПО кб99_СоответствияТоваровЕИС.КонтрактныйТовар = еисКонтрактныеТовары.Ссылка
			|ГДЕ
			|	еисКонтрактныеТовары.Владелец = &Владелец
			|УПОРЯДОЧИТЬ ПО
			|	КонтрактныйТовар
			|АВТОУПОРЯДОЧИВАНИЕ";		
		Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
		
		тзТоварыПоКонтракту.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзФайла(Команда)

	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытия.МножественныйВыбор = Ложь;
	ДиалогОткрытия.Заголовок = "Выберите каталог с файлами выгрузки, сформированными на сайте ЕИС";
	Если ДиалогОткрытия.Выбрать() Тогда
		
		спТоварыПоКонтракту = Новый Соответствие;
		
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Объект.Наименование = "<Загрузка....>";
			Записать();
		КонецЕсли;
		
		ИмяКаталога = ДиалогОткрытия.Каталог;
		
		ФайлыДоп = НайтиФайлы(ИмяКаталога, "PRIL_ON_NSCHFDOPPR*.xml");
		Если ФайлыДоп.Количество() Тогда
			txt = Новый ТекстовыйДокумент;
			txt.Прочитать(ФайлыДоп[0].ПолноеИмя);
			АдресВх = ПоместитьВоВременноеХранилище(txt.ПолучитьТекст());
			ПрочитатьФайлДоп(АдресВх, спТоварыПоКонтракту);
		Иначе
			ЕИС_Клиент.СообщитьИнфо("В выбранном каталоге отсуствтует файл выгрузки: PRIL_ON_NSCHFDOPPR*.xml");
		КонецЕсли;

		ФайлыСФ = НайтиФайлы(ИмяКаталога, "ON_NSCHFDOPPR*.xml");
		Если ФайлыСФ.Количество() Тогда
			txt = Новый ТекстовыйДокумент;
			txt.Прочитать(ФайлыСФ[0].ПолноеИмя);
			АдресВх = ПоместитьВоВременноеХранилище(txt.ПолучитьТекст());
			ПрочитатьФайлСФ(АдресВх, спТоварыПоКонтракту);
		Иначе
			ЕИС_Клиент.СообщитьИнфо("В выбранном каталоге отсуствтует файл выгрузки: ON_NSCHFDOPPR*.xml");
		КонецЕсли;
		
		Модифицированность = Истина;
		ОбновитьТчТоварыПоКотракту();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлСФ(АдресВх, спТоварыПоКонтракту)
	
	МодульИнтеграции = ГМ_ЕИС.ПолучитьОбщийМодульИнтеграции();
	
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.УстановитьСтроку(ПолучитьИзВременногоХранилища(АдресВх));
	objXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	ИдФайл = objXDTO.ИдФайл;
	НачальныйСимвол = Найти(ИдФайл, "2ZK-CUS-");
	
	Если НачальныйСимвол > 0 Тогда
		
		ИдентификаторПолучателя = Сред(ИдФайл, НачальныйСимвол+8, 11);
				
		Объект.РегНомерКонтрагента = ИдентификаторПолучателя;
		
		Документ = objXDTO.Документ;
		СвСчФакт = Документ.СвСчФакт;
		СвПокуп  = СвСчФакт.СвПокуп;
		СвЮЛУч   = СвПокуп.ИдСв.СвЮЛУч;
		
		ДатаКонтрактаСтр = СвСчФакт.ДопСвФХЖ1.ИнфПродЗаГоскКазн.ДатаГосКонт;
		ДатаКонтракта = Дата(Прав(ДатаКонтрактаСтр, 4) + Сред(ДатаКонтрактаСтр, 4, 2) +
			Лев(ДатаКонтрактаСтр, 2));
			
		Объект.ДатаКонтракта = ДатаКонтракта;
		Объект.НомерКонтракта = СвСчФакт.ДопСвФХЖ1.ИнфПродЗаГоскКазн.НомерГосКонт;
		Объект.Наименование = Объект.НомерКонтракта;
		Объект.ОКПОПокупателя = СвПокуп.ОКПО;
		Объект.СокращенноеНаименованиеКонтрагента = СвПокуп.СокрНаим;
		Объект.ПолноеНаименованиеКонтрагента = СвЮЛУч.НаимОрг;
		Объект.ИННПокупателя = СвЮЛУч.ИННЮЛ;
		Объект.КПППокупателя = СвЮЛУч.КПП;
		Объект.Контрагент = ГМ_ЕИС.НайтиКонтрагентаПоИНН(Объект.ИННПокупателя);
		Объект.ДатаЗаключения = ДатаКонтракта;
		
		ТоварыСФ = Документ.ТаблСчФакт.СведТов;
		Если Не ТипЗнч(ТоварыСФ) = Тип("СписокXDTO") Тогда
			СписокТоваров = Новый Массив;
			СписокТоваров.Добавить(ТоварыСФ);
		Иначе 
			СписокТоваров = ТоварыСФ;
		КонецЕсли;
		
		Для Каждого	Товар Из СписокТоваров Цикл
			ТекСтр = спТоварыПоКонтракту.Получить(Товар.НомСтр);
			ТекСтр.КТРУКод = Товар.ДопСведТов.КодТов;
			ТекСтр.ТипОбъектаЗакупки = Перечисления.еисТипыОбъектовЗакупки[Метаданные.Перечисления.еисТипыОбъектовЗакупки.ЗначенияПеречисления[Число(Товар.ДопСведТов.ПрТовРаб)-1].Имя];
			ТекСтр.СтавкаНДС = Товар.НалСт;
			ТекСтр.ЕдиницаИзмерения = МодульИнтеграции.НайтиЕдиницуИзмерения(Товар.ОКЕИ_Тов);
			Если Не ЗначениеЗаполнено(ТекСтр.ЕдиницаИзмерения) Тогда
				ГМ_ЕИС.СообщитьИнфо("Не найдена единица измерения с кодом: " + Товар.ОКЕИ_Тов);	
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого КлючИЗначение Из спТоварыПоКонтракту Цикл
			
			ДанныеЗаполненияТовар = КлючИЗначение.Значение;
			
			guid = ДанныеЗаполненияТовар.guid;
			КонтрактныйТоварСсылка = Справочники.еисКонтрактныеТовары.НайтиПоРеквизиту("guid", guid,, Объект.Ссылка);
			Если Не ЗначениеЗаполнено(КонтрактныйТоварСсылка) Тогда
				КонтрактныйТовар = Справочники.еисКонтрактныеТовары.СоздатьЭлемент();
			Иначе
				КонтрактныйТовар = КонтрактныйТоварСсылка.ПолучитьОбъект();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(КонтрактныйТовар, ДанныеЗаполненияТовар);
			КонтрактныйТовар.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлДоп(АдресВх, спТоварыПоКонтракту)
	
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.УстановитьСтроку(ПолучитьИзВременногоХранилища(АдресВх));
	objXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	БанкРекв = objXDTO.СведПоставщик.БанкРекв;
	СведЗаказчик = objXDTO.СведЗаказчик;
	
	СведКонт = objXDTO.СведКонт;
	Объект.РеестровыйНомерКонтракта = СведКонт.РеестрНомКонт;
	Объект.Идентификатор = СведКонт.ИдВерсКонт;
	Объект.ИдЗакупки = СведКонт.ИКЗ;
	Объект.ПоставщикGuid = БанкРекв.ИдПлатежнРеквКонт;
	Объект.ПоставщикБанк = БанкРекв.НаимБанк;
	Объект.ПоставщикРасчетныйСчет = БанкРекв.РасчСчет;
	Объект.ПоставщикКоррСчет = БанкРекв.КорСчетБанк;
	Объект.ПоставщикБИК = БанкРекв.БИК;
	Объект.ПоставщикНаименование = БанкРекв.КонтрагентНаим;
    Объект.СВРПокупателя = СведЗаказчик.КодСВР;
	
	ТоварыСФ = objXDTO.СведТов.СведТРУ;
	Если Не ТипЗнч(ТоварыСФ) = Тип("СписокXDTO") Тогда
		СписокТоваров = Новый Массив;
		СписокТоваров.Добавить(ТоварыСФ);
	Иначе 
		СписокТоваров = ТоварыСФ;
	КонецЕсли;
		
	Для Каждого	Товар Из СписокТоваров Цикл
		
		НедеталТРУ = Товар.НедеталТРУ;
		НеЛПСвед = НедеталТРУ.НеЛПСвед;
		
		ДанныеЗаполненияТовар = Новый Структура();
		ДанныеЗаполненияТовар.Вставить("Наименование", НедеталТРУ.НаимТовИсх);
		ДанныеЗаполненияТовар.Вставить("ПолноеНаименование", НедеталТРУ.НаимТовИсх);
		ДанныеЗаполненияТовар.Вставить("Идентификатор", НедеталТРУ.ТехИдТРУ);
		ДанныеЗаполненияТовар.Вставить("guid", НедеталТРУ.ИдТРУ);
		ДанныеЗаполненияТовар.Вставить("КТРУКод");
		ДанныеЗаполненияТовар.Вставить("Цена", НеЛПСвед.ЦенаИзКонтСНДС);
		ДанныеЗаполненияТовар.Вставить("СтавкаНДС");
		ДанныеЗаполненияТовар.Вставить("ЕдиницаИзмерения");
		ДанныеЗаполненияТовар.Вставить("СтранаПроисхождения", Справочники.СтраныМира.ПустаяСсылка());
		ДанныеЗаполненияТовар.Вставить("ТипОбъектаЗакупки");
		ДанныеЗаполненияТовар.Вставить("Владелец", Объект.Ссылка);
		
		спТоварыПоКонтракту.Вставить(НеЛПСвед.НомСтр, ДанныеЗаполненияТовар);
		
	КонецЦикла;
	
	guidЭтапа = СведКонт.ИдЭтапКонт;
	ЭтапСсылка = Справочники.еисЭтапы.НайтиПоРеквизиту("guid", guidЭтапа, , Объект.Ссылка);
	Если Не ЗначениеЗаполнено(ЭтапСсылка) Тогда
		
		Этап = Справочники.еисЭтапы.СоздатьЭлемент();
		Этап.Владелец = Объект.Ссылка;
		Этап.guid = guidЭтапа;
		Этап.Наименование = guidЭтапа;
		Этап.Идентификатор = СведКонт.ТехИдЭтапКонт;
		Если ГМ_ЕИС.ЕстьРеквизитИлиСвойствоОбъекта(СведКонт, "ВнешТехИдЭтапКонт") Тогда
			Этап.ВнешнийИдентификатор = СведКонт.ВнешТехИдЭтапКонт;
		КонецЕсли;
		Этап.Записать();
		
		ЭтапСсылка = Этап.Ссылка;
		
	КонецЕсли;
	
	Объект.ТекущийЭтап = ЭтапСсылка;
	
КонецПроцедуры